name: Build and Lint Test
on:
  push:
    paths-ignore:
      - '**.md'
      - 'renovate.json'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'renovate.json'

jobs:
  build-test:
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    name: Build and Lint Test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    services:
      mariadb:
        image: mariadb:11.1.2
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: passwd
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20.5.1
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Check MySQL CLI existence
        id: check-mysql-cli
        uses: andstor/file-existence-action@20b4d2e596410855db8f9ca21e96fbe18e12930b # v2
        with:
          files: "/usr/bin/mysql"
      - name: Install MySQL CLI
        if: steps.check-mysql-cli.outputs.files_exists == 'false'
        run: sudo apt-get update && sudo apt-get -y install mysql-client

      - name: Setup MariaDB
        run: 'mysql --protocol=tcp -h localhost --port 3306 -u root -ppasswd -e "$(cat ./.github/workflows/test-data/test-mariadb-setup.sql)"'

      - run: cp ./.github/workflows/test-data/.env.test ./.env.local

      - name: pnpm install
        if: steps.cache-node_modules-cli.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - run: node --version
      - run: pnpm --version

      - run: pnpm run build
